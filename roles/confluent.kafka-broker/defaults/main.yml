kafka:
  broker:
    user: kafka
    group: rioadmin
    config_dir: "{{ confluent_config_dir }}"
    config_file: server.properties
    systemd_file: /usr/lib/systemd/system/confluent-kafka.service
    service_name: confluent-kafka
    logdir: "{{ confluent_log_dir }}"
    prometheus_jmx_path: /opt/confluent/prometheus/confluent-kafka-jmx.yml
    datadir:
      - "{{ data_base_dir }}/kafka/data"
    systemd:
      enabled: yes
      state: started
    config:
      group.initial.rebalance.delay.ms: 0
      log.retention.check.interval.ms: 300000
      log.retention.hours: 168
      log.segment.bytes: 1073741824
      num.io.threads: 16
      num.network.threads: 8
      num.partitions: 1 # Default to any topic if user not gives while topic creation
      num.recovery.threads.per.data.dir: 2
      offsets.topic.replication.factor: "{{replication_factor}}"
      socket.receive.buffer.bytes: 102400
      socket.request.max.bytes: 104857600
      socket.send.buffer.bytes: 102400
      transaction.state.log.min.isr: 2
      transaction.state.log.replication.factor: "{{replication_factor}}"
      zookeeper.connection.timeout.ms: 6000
      delete.topic.enable: true
      auto.create.topics.enable: false # Need to disable in higher env
      metric.reporters: io.confluent.metrics.reporter.ConfluentMetricsReporter
      confluent.metrics.reporter.bootstrap.servers: "{{inventory_hostname}}:{{broker.config.port}}"
    environment:
      KAFKA_OPTS: "-Djava.security.auth.login.config={{ kafka_server_jaas }} -javaagent:{{ jmx_prometheus_javaagent }}=9089:/opt/confluent/prometheus/confluent-kafka-jmx.yml"
      KAFKA_HEAP_OPTS: "-Xms6g -Xmx6g"